# -*- coding: utf-8 -*-
# Generated by Django 1.10.2 on 2017-02-26 20:51
from __future__ import unicode_literals

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Boy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('attractiveness', models.FloatField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('intelligenceLevel', models.FloatField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('isCommitted', models.BooleanField(default=False)),
                ('budget', models.DecimalField(decimal_places=2, max_digits=13)),
                ('attractionRequirement', models.FloatField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('boyType', models.IntegerField(choices=[(1, 'The Miser'), (2, 'The Generous'), (3, 'The Geek')], default=None)),
            ],
        ),
        migrations.CreateModel(
            name='EssentialGift',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, max_digits=13)),
                ('value', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Exchange',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('giftType', models.IntegerField(choices=[(1, 'Essential Gift'), (2, 'Luxury Gift'), (3, 'Utility Gift')], default=None)),
                ('exchangeTime', models.DateTimeField(default=django.utils.timezone.now)),
                ('essentialGift', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='vDate.EssentialGift')),
            ],
        ),
        migrations.CreateModel(
            name='Girl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('attractiveness', models.FloatField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('intelligenceLevel', models.FloatField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('isCommitted', models.BooleanField(default=False)),
                ('maintenanceBudget', models.DecimalField(decimal_places=2, max_digits=13)),
                ('datingCriteria', models.IntegerField(choices=[(1, 'Most Attractive'), (2, 'Most Rich'), (3, 'Most Intelligent')])),
                ('girlType', models.IntegerField(choices=[(1, 'The Choosy'), (2, 'The Normal'), (3, 'The Desperate')], default=None)),
            ],
        ),
        migrations.CreateModel(
            name='LuxuryGift',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, max_digits=13)),
                ('value', models.FloatField()),
                ('luxuryRating', models.FloatField()),
                ('difficultyToObtain', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Relation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('commitOn', models.DateTimeField(default=django.utils.timezone.now)),
                ('breakupOn', models.DateTimeField(blank=True, null=True)),
                ('compatibility', models.FloatField(default=0)),
                ('happiness', models.FloatField(blank=True, null=True)),
                ('boy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vDate.Boy')),
                ('girl', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vDate.Girl')),
            ],
        ),
        migrations.CreateModel(
            name='UtilityGift',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, max_digits=13)),
                ('value', models.FloatField()),
                ('utilityValue', models.FloatField()),
                ('utilityClass', models.IntegerField(choices=[(1, 'Health'), (2, 'Home'), (3, 'Kitchen'), (4, 'Sanitation'), (5, 'Stationary')])),
            ],
        ),
        migrations.AddField(
            model_name='exchange',
            name='luxuryGift',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='vDate.LuxuryGift'),
        ),
        migrations.AddField(
            model_name='exchange',
            name='relation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exchanges', to='vDate.Relation'),
        ),
        migrations.AddField(
            model_name='exchange',
            name='utilityGift',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='vDate.UtilityGift'),
        ),
    ]
